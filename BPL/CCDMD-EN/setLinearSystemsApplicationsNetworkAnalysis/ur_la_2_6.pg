##DESCRIPTION
##  Network Analysis
##ENDDESCRIPTION

## DBsubject('Linear Algebra')
## DBchapter('System of Linear Equations')
## KEYWORDS('applications')

## Author('MC Bonneau')
## Institution('Cegep Heritage College')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"MatrixUnits.pl",
"MatrixReduce.pl",
"PGmatrixmacros.pl",
"PGgraphmacros.pl",
"PGunion.pl",
"parserPopUp.pl",
"scaffold.pl"
);


TEXT(beginproblem());
$showPartialCorrectAnswers = 1;

Context("Numeric");

$t1 = random(-20,20,10);
$t2 = random(0,40,10);
$t3 = random(20,60,10);
$t4 = random(0,40,10);

$a = random(0,20,20);
$b = 4*$t1 - $a - $t2 - $t3;
$c = 4*$t2 - $a - $t1 - $t4;
$d = 4*$t3 - $b - $t1 - $t4;
$e = 4*$t4 - $c - $t2 - $t3;

$graph = init_graph(-15, -15, 15, 15);
$f1 = FEQ("x+5 for x in <-10,5> using color:black and weight:2");
$f2 = FEQ("x-5 for x in <-5,10> using color:black and weight:2");
$f3 = FEQ("-x+5 for x in <-5,10> using color:black and weight:2");
$f4 = FEQ("-x-5 for x in <-10,5> using color:black and weight:2");

($f1Ref,$f2Ref,$f3Ref,$f4Ref) = plot_functions($graph,$f1,$f2,$f3,$f4);

$label_a1 = new Label (5, 10, $a, 'black', 'left', 'bottom');
$label_a2 = new Label (10, 5, $a, 'black', 'left', 'bottom');
$label_c1 = new Label (10, -5, $c, 'black', 'left', 'top');
$label_c2 = new Label (5, -10, $c, 'black', 'left', 'top');
$label_b1 = new Label (-5, 10, $b, 'black', 'right', 'bottom');
$label_b2 = new Label (-10, 5, $b, 'black', 'right', 'bottom');
$label_d = new Label (-10, -5, $d, 'black', 'right', 'top');
$label_e = new Label (-5, -10, $e, 'black', 'right', 'top');

$label_t1 = new Label (1, 5, 'T', 'black', 'left', 'middle');
$label_t2 = new Label (6, 0, 'T', 'black', 'left', 'middle');
$label_t3 = new Label (-4, 0, 'T', 'black', 'left', 'middle');
$label_t4 = new Label (1, -5, 'T', 'black', 'left', 'middle');
$label_t1n = new Label (2, 4.5, '1', 'black', 'left', 'middle');
$label_t2n = new Label (7, -0.5, '2', 'black', 'left', 'middle');
$label_t3n = new Label (-3, -0.5, '3', 'black', 'left', 'middle');
$label_t4n = new Label (2, -5.5, '4', 'black', 'left', 'middle');

$graph->lb($label_a1, $label_a2, $label_c1, $label_c2, 
	   $label_b1, $label_b2, $label_d, $label_e, 
	   $label_t1, $label_t2, $label_t3, $label_t4, 
	   $label_t1n, $label_t2n, $label_t3n, $label_t4n);

# 4T1 = T2+T3+$a+$b
$a11 = 4;
$a12 = -1;
$a13 = -1;
$a14 = 0;
$b1 = Compute("$a+$b");

# 4T2 = T1+T4+$a+$c
$a21 = -1;
$a22 = 4;
$a23 = 0;
$a24 = -1;
$b2 = Compute("$a+$c");

# 4T3 = T1+T4+$b+$d
$a31 = -1;
$a32 = 0;
$a33 = 4;
$a34 = -1;
$b3 = Compute("$b+$d");

# 4T4 = T2+T3+$c+$e
$a41 = 0;
$a42 = -1;
$a43 = -1;
$a44 = 4;
$b4 = Compute("$c+$e");

Context("Matrix");
$M = Matrix([[$a11,$a12,$a13,$a14,$b1],[$a21,$a22,$a23,$a24,$b2],[$a31,$a32,$a33,$a34,$b3],[$a41,$a42,$a43,$a44,$b4]]);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$A = Matrix([[$a11,$a12,$a13,$a14],[$a21,$a22,$a23,$a24],[$a31,$a32,$a33,$a34],[$a41,$a42,$a43,$a44]]);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$B = Matrix([[$b1], [$b2], [$b3], [$b4]]);

Context("Numeric");
Context()->variables->add("T1" => 'Real', "T2" => 'Real', "T3" => 'Real', "T4" => 'Real');
$Eq1 = Formula("4T1-T2-T3")->reduce;
$Eq2 = Formula("4T2-T1-T4")->reduce;
$Eq3 = Formula("4T3-T1-T4")->reduce;
$Eq4 = Formula("4T4-T2-T3")->reduce;

###########################################
Context()->texStrings;
BEGIN_TEXT
$BBOLD Question $EBOLD $BR $BR

In a grid of wires, the temperature at exterior mesh poins is maintained at constant values as shown in the
figure below. When the grid is in thermal equilibrium, the temperature at each interior mesh point is the average of
the temperatures at the four adjacent points. 
$BR $BR
\{ image(insertGraph($graph),height=>200,width=>200) \} $BR $BR
Find the temperatures \(T1,\) \(T2,\) \(T3,\) \(T4,\) when the grid is in thermal equilibrium. 
$BR
$BR
$HR
$BBOLD Solution $EBOLD $BR $BR
END_TEXT
Context()->normalStrings;

###########################################
#  The scaffold
Scaffold::Begin();

side_labels( @array );

Section::Begin("Define the variables and the system");

Context("Numeric");
# @ T1 : T2, T3, $a and $b
# @ T2 : T1, T4, $a and $c
# @ T3 : T1, T4, $b and $d 
# @ T4 : T2, T3, $c and $e
if($a<$c)
{
    $node1 = $a;
    $node2 = $c;
}
else
{
    $node1 = $c;
    $node2 = $a;
}

if($b<$d)
{
    $node3 = $b;
    $node4 = $d;
}
else
{
    $node3 = $d;
    $node4 = $b;
}

if($a<$b)
{
    $node5 = $a;
    $node6 = $b;
}
else
{
    $node5 = $b;
    $node6 = $a;
}

if($c<$e)
{
    $node7 = $c;
    $node8 = $e;
}
else
{
    $node7 = $e;
    $node8 = $c;
}

$popT1 = PopUp(["?", "T1, T4, $node1 and $node2", "T1, T4, $node3 and $node4", "T2, T3, $node5 and $node6", "T2, T3, $node7 and $node8"],"T2, T3, $node5 and $node6");
$popT2 = PopUp(["?", "T1, T4, $node1 and $node2", "T1, T4, $node3 and $node4", "T2, T3, $node5 and $node6", "T2, T3, $node7 and $node8"],"T1, T4, $node1 and $node2");
$popT3 = PopUp(["?", "T1, T4, $node1 and $node2", "T1, T4, $node3 and $node4", "T2, T3, $node5 and $node6", "T2, T3, $node7 and $node8"],"T1, T4, $node3 and $node4");
$popT4 = PopUp(["?", "T1, T4, $node1 and $node2", "T1, T4, $node3 and $node4", "T2, T3, $node5 and $node6", "T2, T3, $node7 and $node8"],"T2, T3, $node7 and $node8");

Context("Numeric");
Context()->variables->add("T1" => 'Real', "T2" => 'Real', "T3" => 'Real', "T4" => 'Real');
$EqT1 = Formula("(T2+T3+$a+$b)/4")->reduce;
$EqT2 = Formula("(T1+T4+$a+$c)/4")->reduce;
$EqT3 = Formula("(T1+T4+$b+$d)/4")->reduce;
$EqT4 = Formula("(T2+T3+$c+$e)/4")->reduce;

Context()->texStrings;
BEGIN_TEXT
The variables \(T_1,\) \(T_2,\) \(T_3,\) \(T_4,\) are defined as per the figure. $BR $BR
$BBOLD Note: $EBOLD Write $BBOLD T1 $EBOLD for \(T_1\), $BBOLD T2 $EBOLD for \(T_2\), and so on. $BR 
Only integers are accepted in the answers. $BR$HR $BR
When the grid is in thermal equilibrium, we have
$BR $BR
 @ \( T_1 \): the adjacent points are \{ $popT1->menu() \} $BR $BR
which gives
\( \displaystyle T_1= \) \{ans_rule(30)\} ($BITALIC write the average of
the temperatures at the four adjacent points $EITALIC) $BR $BR
Rewriting the above equation in standard form gives us $BR $BR
\( \quad \) \{ans_rule(30)\} \( = \) \{ans_rule(10)\} ($BITALIC write the variables on the left and the constants on the right $EITALIC) 
$BR $BR
$HR $HR
$BR $BR
@ \( T_2 \): the adjacent points are \{ $popT2->menu() \} $BR $BR
which gives
\( \displaystyle T_2= \) \{ans_rule(30)\} ($BITALIC write the average of
the temperatures at the four adjacent points $EITALIC) $BR $BR
Rewriting the above equation in standard form gives us $BR $BR
\( \quad \) \{ans_rule(30)\} \( = \) \{ans_rule(10)\} ($BITALIC write the variables on the left and the constants on the right $EITALIC) 
$BR $BR
$HR $HR
$BR $BR
@ \( T_3 \): the adjacent points are \{ $popT3->menu() \} $BR $BR
which gives
\( \displaystyle T_3= \) \{ans_rule(30)\} ($BITALIC write the average of
the temperatures at the four adjacent points $EITALIC)$BR $BR
Rewriting the above equation in standard form gives us $BR $BR
\( \quad \) \{ans_rule(30)\} \( = \) \{ans_rule(10)\} ($BITALIC write the variables on the left and the constants on the right $EITALIC) 
$BR $BR
$HR $HR
$BR $BR
@ \( T_4 \): the adjacent points are \{ $popT4->menu() \} $BR $BR
which gives
\( \displaystyle T_4= \) \{ans_rule(30)\} ($BITALIC write the average of
the temperatures at the four adjacent points $EITALIC)$BR $BR
Rewriting the above equation in standard form gives us $BR $BR
\( \quad \) \{ans_rule(30)\} \( = \) \{ans_rule(10)\} ($BITALIC write the variables on the left and the constants on the right $EITALIC)

END_TEXT
Context()->normalStrings;

ANS($popT1->cmp() );
ANS($EqT1->cmp);
ANS($Eq1->cmp);
ANS($b1->cmp);

ANS($popT2->cmp() );
ANS($EqT2->cmp);
ANS($Eq2->cmp);
ANS($b2->cmp);

ANS($popT3->cmp() );
ANS($EqT3->cmp);
ANS($Eq3->cmp);
ANS($b3->cmp);

ANS($popT4->cmp() );
ANS($EqT4->cmp);
ANS($Eq4->cmp);
ANS($b4->cmp);

Section::End();

Section::Begin("Create the augmented matrix");

Context()->texStrings;
BEGIN_TEXT
Using
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( $Eq1 \)","\( = \)","\( $b1 \)"], align=>RIGHT, separation=>0, indent=>10).
AlignedRow(["\( $Eq2 \)","\( = \)","\( $b2 \)"], align=>RIGHT, separation=>0, indent=>10).
AlignedRow(["\( $Eq3 \)","\( = \)","\( $b3 \)"], align=>RIGHT, separation=>0, indent=>10).
AlignedRow(["\( $Eq4 \)","\( = \)","\( $b4 \)"], align=>RIGHT, separation=>0, indent=>10).

EndTable()
\}
$BR
write the augmented matrix for the temperatures \(T_1,\) \(T_2,\) \(T_3,\) \(T_4,\) when the grid is in thermal equilibrium. $BR $BR
\( \quad \) \{ $A->ans_array(2) \} \{ $B->ans_array(2) \}
END_TEXT
Context()->normalStrings;

ANS( $A->cmp() );
ANS( $B->cmp() );

Section::End();

###########################################
### R1C1 
###########################################
Section::Begin("Find the RREF of the augmented matrix");

Context("Numeric");
$popRow = PopUp(["?", "row 1 column 1", "row 1 column 2", "row 1 column 3", "row 1 column 4", "row 2 column 1", "row 2 column 2","row 2 column 3", "row 2 column 4", "row 3 column 1", "row 3 column 2", "row 3 column 3", "row 3 column 4", "row 4 column 1", "row 4 column 2", "row 4 column 3", "row 4 column 4"],"row 1 column 1");

Context("Numeric");
$popSwap = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"interchange two rows");
$popMultiply = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"multiply a row by a non-zero constant");
$popAdd = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"add a multiple of a row to another row");
$popLeadingOne = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"there is already a leading 1");

#check box 20
$ans_eval20 = $popSwap->cmp();
$ans_hash20 = $ans_eval20->evaluate($inputs_ref->{ANS_NUM_TO_NAME(20)});
$TESTSwap = $ans_hash20->{score};

$ans_eval20 = $popMultiply->cmp();
$ans_hash20 = $ans_eval20->evaluate($inputs_ref->{ANS_NUM_TO_NAME(20)});
$TESTMultiply = $ans_hash20->{score};

$ans_eval20 = $popAdd->cmp();
$ans_hash20 = $ans_eval20->evaluate($inputs_ref->{ANS_NUM_TO_NAME(20)});
$TESTAdd = $ans_hash20->{score};

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}  ) )\} 
    \{   display_matrix_mm($M, align=>'rrrr|r')  \} 
\) 

$BR $BR
For this step, the leading 1 should be in \{ $popRow->menu() \} and to create that leading 1, I will \{ $popLeadingOne->menu() \}.

END_TEXT
Context()->normalStrings;

ANS($popRow->cmp() );

if($TESTSwap)
{
    ANS($popSwap->cmp() );
}
elsif($TESTMultiply)
{
    ANS($popMultiply->cmp() );
}
elsif($TESTAdd)
{
    ANS($popAdd->cmp() );
}
else
{
    ANS($popLeadingOne->cmp() );
}

Section::End();

Section::Begin(" ");

Context("Matrix");
$MR1 = $M;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR1 = $A;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR1 = $B;

if($TESTSwap)
{
Context()->texStrings;
BEGIN_TEXT
It is best to create a leading 1 before interchanging two rows. Reopen the previous tab and choose a different option to first create a leading 1. $BR $BR
Leave the following box empty: \{ans_rule(5)\}
END_TEXT
Context()->normalStrings;

ANS(str_cmp("ok"));
}
elsif($TESTMultiply)
{
Context("Numeric");
$pop_1_Row1 = PopUp(["?", "R1", "R2","R3", "R4"],"R1");
$pop_1_Row2 = PopUp(["?", "R1", "R2","R3", "R4"],"R2");
$pop_1_Row3 = PopUp(["?", "R1", "R2","R3", "R4"],"R3");
$pop_1_Row4 = PopUp(["?", "R1", "R2","R3", "R4"],"R4");

#check box 22
$ans_eval22 = $pop_1_Row2->cmp();
$ans_hash22 = $ans_eval22->evaluate($inputs_ref->{ANS_NUM_TO_NAME(22)});
$TEST_1_Row2 = $ans_hash22->{score};

$ans_eval22 = $pop_1_Row3->cmp();
$ans_hash22 = $ans_eval22->evaluate($inputs_ref->{ANS_NUM_TO_NAME(22)});
$TEST_1_Row3 = $ans_hash22->{score};

$ans_eval22 = $pop_1_Row4->cmp();
$ans_hash22 = $ans_eval22->evaluate($inputs_ref->{ANS_NUM_TO_NAME(22)});
$TEST_1_Row4 = $ans_hash22->{score};

$i = 1;
if($TEST_1_Row2)
{ 
    $i = 2;
}
elsif($TEST_1_Row3)
{ 
    $i = 3;
}
elsif($TEST_1_Row4)
{ 
    $i = 4;
}

Context("Matrix");
$MR1 = row_mult($M,$i,1/$M->element($i,1));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR1 = row_mult($A,$i,1/$A->element($i,1));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR1 = row_mult($B,$i,1/$A->element($i,1));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4} ) )\} 
    \{   display_matrix_mm($M, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)",ans_rule(2).$pop_1_Row1->menu(),$AR1->ans_array(2),$BR1->ans_array(2)], align=>LEFT, separation=>0, indent=>10).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((1/$A->element($i,1))->cmp);
if($TEST_1_Row2)
{
    ANS($pop_1_Row2->cmp());
}
elsif($TEST_1_Row3)
{
    ANS($pop_1_Row3->cmp());
}
elsif($TEST_1_Row4)
{
    ANS($pop_1_Row4->cmp());
}
else
{
    ANS($pop_1_Row1->cmp());
}
ANS($AR1->cmp);
ANS($BR1->cmp);
}
elsif($TESTAdd)
{
Context("Matrix");
$MR1 = $M;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR1 = $A;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR1 = $B;

Context("Numeric");
$pop_1_Row1 = PopUp(["?", "R1", "R2","R3", "R4"],"R1");
$pop_1_Row2 = PopUp(["?", "R1", "R2","R3", "R4"],"R2");
$pop_1_Row3 = PopUp(["?", "R1", "R2","R3", "R4"],"R3");
$pop_1_Row4 = PopUp(["?", "R1", "R2","R3", "R4"],"R4");
$pop_2_Row1 = PopUp(["?", "R1", "R2","R3", "R4"],"R1");
$pop_2_Row2 = PopUp(["?", "R1", "R2","R3", "R4"],"R2");
$pop_2_Row3 = PopUp(["?", "R1", "R2","R3", "R4"],"R3");
$pop_2_Row4 = PopUp(["?", "R1", "R2","R3", "R4"],"R4");
$popSignPlus = PopUp(["?","+","-"],"+");
$popSignMinus = PopUp(["?","+","-"],"-");

#check box 21
$ans_eval21 = $pop_1_Row2->cmp();
$ans_hash21 = $ans_eval21->evaluate($inputs_ref->{ANS_NUM_TO_NAME(21)});
$TEST_1_Row2 = $ans_hash21->{score};

$ans_eval21 = $pop_1_Row3->cmp();
$ans_hash21 = $ans_eval21->evaluate($inputs_ref->{ANS_NUM_TO_NAME(21)});
$TEST_1_Row3 = $ans_hash21->{score};

$ans_eval21 = $pop_1_Row4->cmp();
$ans_hash21 = $ans_eval21->evaluate($inputs_ref->{ANS_NUM_TO_NAME(21)});
$TEST_1_Row4 = $ans_hash21->{score};

#check box 22
$ans_eval22 = $popSignMinus->cmp();
$ans_hash22 = $ans_eval22->evaluate($inputs_ref->{ANS_NUM_TO_NAME(22)});
$TESTSignMinus = $ans_hash22->{score};

$ans_eval22 = $popSignPlus->cmp();
$ans_hash22 = $ans_eval22->evaluate($inputs_ref->{ANS_NUM_TO_NAME(22)});
$TESTSignPlus = $ans_hash22->{score};

#check box 23
$ans_eval23 = Compute("")->cmp;
$ans_hash23 = $ans_eval23->evaluate($inputs_ref->{ANS_NUM_TO_NAME(23)});
$TESTkValue = $ans_hash23->{score};

#check box 24
$ans_eval24 = $pop_2_Row2->cmp();
$ans_hash24 = $ans_eval24->evaluate($inputs_ref->{ANS_NUM_TO_NAME(24)});
$TEST_2_Row2 = $ans_hash24->{score};

$ans_eval24 = $pop_2_Row3->cmp();
$ans_hash24 = $ans_eval24->evaluate($inputs_ref->{ANS_NUM_TO_NAME(24)});
$TEST_2_Row3 = $ans_hash24->{score};

$ans_eval24 = $pop_2_Row4->cmp();
$ans_hash24 = $ans_eval24->evaluate($inputs_ref->{ANS_NUM_TO_NAME(24)});
$TEST_2_Row4 = $ans_hash24->{score};

$i = 1;
if($TEST_1_Row2)
{ 
    $i = 2;
}
elsif($TEST_1_Row3)
{
    $i = 3;
}
elsif($TEST_1_Row4)
{
    $i = 4;
}

$j = 1;
if($TEST_2_Row2)
{ 
    $j = 2;
}
elsif($TEST_2_Row3)
{
    $j = 3;
}
elsif($TEST_2_Row4)
{
    $j = 4;
}

$sign = 1;
if($TESTSignMinus)
{
    $sign = -1;
}

$k = 100;
if(!$TESTkValue)
{
    $k = $inputs_ref->{ANS_NUM_TO_NAME(23)};
}

if($k!=0)
{
    Context("Matrix");
    $MR1 = row_add($M,$i,$j,$sign*$k);
    
    Context("Matrix");
    Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
    Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
    Context()->parens->set("[" => {type => "Matrix", close=>'|'});
    $AR1 = row_add($A,$i,$j,$sign*$k);

    Context("Matrix");
    Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
    Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
    Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
    $BR1 = row_add($B,$i,$j,$sign*$k);

}

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($M, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)",$pop_1_Row1->menu().$popSignPlus->menu().ans_rule(2).$pop_2_Row2->menu(),$AR1->ans_array(2),$BR1->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

if($TEST_1_Row2)
{
    ANS($pop_1_Row2->cmp());
}
elsif($TEST_1_Row3)
{
    ANS($pop_1_Row3->cmp());
}
elsif($TEST_1_Row4)
{
    ANS($pop_1_Row4->cmp());
}
else
{
    ANS($pop_1_Row1->cmp());
}

if($TESTSignMinus)
{
    ANS($popSignMinus->cmp());
}
else
{
    ANS($popSignPlus->cmp());
}

ANS(Compute("$k")->cmp);

if($TEST_2_Row2)
{
    ANS($pop_2_Row2->cmp());
}
elsif($TEST_2_Row3)
{
    ANS($pop_2_Row3->cmp());
}
elsif($TEST_2_Row4)
{
    ANS($pop_2_Row4->cmp());
}
else
{
    ANS($pop_2_Row1->cmp());
}

ANS($AR1->cmp);
ANS($BR1->cmp);
}
else
{
    if($A->element(1,1) != 1 )
    {
Context()->texStrings;
BEGIN_TEXT
A leading 1 needs to be created in column 1. Reopen the previous tab and choose a different option to first create a leading 1. $BR $BR
Leave the following box empty: \{ans_rule(5)\}
END_TEXT
Context()->normalStrings;

ANS(str_cmp("ok"));
    }
}

Section::End();

#######################
#Option to swap rows 
#######################
Section::Begin(" ");

Context("Numeric");
$AR11_Flag = 0;

if($AR1->element(1,1) != 1 && ($AR1->element(2,1) == 1 || $AR1->element(3,1) == 1  || $AR1->element(4,1) == 1 ))
{
$AR11_Flag = 1;

$popSwap = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"interchange two rows");

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1, align=>'rrrr|r')  \} 
\) 

$BR $BR
Now I will \{ $popLeadingOne->menu() \}

END_TEXT
Context()->normalStrings;

ANS($popSwap->cmp() );
}
Section::End();

Section::Begin(" ");

if( $AR11_Flag == 1)
{
Context("Matrix");
$MR11 = $MR1;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR11 = $AR1;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR11 = $BR1;

Context("Numeric");
$j = 4;
$pop_Row = PopUp(["?", "R1", "R2","R3", "R4"],"R4");

if($AR1->element(2,1) == 1)
{
    $j = 2;
    $pop_Row = PopUp(["?", "R1", "R2","R3", "R4"],"R2");
}
elsif($AR1->element(3,1) == 1)
{
    $j = 3;
    $pop_Row = PopUp(["?", "R1", "R2","R3", "R4"],"R3");
}

Context("Matrix");
$MR11 = row_switch($MR1,1,$j);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR11 = row_switch($AR1,1,$j);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR11 = row_switch($BR1,1,$j);

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\( \text{R1} \Leftrightarrow\)".$pop_Row->menu(),$AR11->ans_array(2),$BR11->ans_array(2)],     align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS($pop_Row->cmp());
ANS($AR11->cmp);
ANS($BR11->cmp);
}
Section::End();

###########################################
Section::Begin(" ");

if($AR11_Flag == 0)
{
    $MR1C1 = $MR1;
    $MR1 = $MR1;
    $AR1C1 = $AR1;
    $AR1 = $AR1;
    $BR1C1 = $BR1;
    $BR1 = $BR1;
}
else
{
    $MR1C1 = $MR11;
    $MR1 = $MR11;
    $AR1C1 = $AR11;
    $AR1 = $AR11;
    $BR1C1 = $BR11;
    $BR1 = $BR11;
}

if($AR1->element(1,1) != 1 )
{
Context()->texStrings;
BEGIN_TEXT
A leading 1 needs to be created in column 1. Fix the previous row operation accordingly or reopen the second tab and choose a different option to first create a leading 1. $BR $BR
Leave the following box empty: \{ans_rule(5)\}
END_TEXT
Context()->normalStrings;

ANS(str_cmp("ok"));
}
else
{

Context("Numeric");
$popColumn = PopUp(["?", "column 1", "column 2", "column 3", "column 4"],"column 1");
$popPivot = PopUp(["?", "row 1 column 1", "row 1 column 2", "row 1 column 3", "row 1 column 4", "row 2 column 1", "row 2 column 2","row 2 column 3", "row 2 column 4", "row 3 column 1", "row 3 column 2", "row 3 column 3", "row 3 column 4", "row 4 column 1", "row 4 column 2", "row 4 column 3", "row 4 column 4"],"row 1 column 1");

Context("Numeric");
$popAbove = PopUp(["?", "above", "below", "above and below"],"below");

Context()->texStrings;
BEGIN_TEXT 
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1, align=>'rrrr|r')  \} 
\) 
$BR $BR
For this step, there should be 0's in \{ $popColumn->menu() \}. I will use the leading 1 in \{ $popPivot->menu() \} to create those 0's \{ $popAbove->menu() \} that leading 1.

END_TEXT
Context()->normalStrings;

ANS($popColumn->cmp() );
ANS($popPivot->cmp() );
ANS($popAbove->cmp() );

Section::End();

Section::Begin(" ");

if($AR1->element(2,1) !=0 && $AR1->element(3,1)!=0)
{
Context("Matrix");
$Mtemp = row_add($MR1, 2, 1, -$MR1->element(2,1));
$MR1C1 = row_add($Mtemp, 3, 1, -$MR1->element(3,1));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR1, 2, 1, -$AR1->element(2,1));
$AR1C1 = row_add($Atemp, 3, 1, -$AR1->element(3,1));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR1, 2, 1, -$AR1->element(2,1));
$BR1C1 = row_add($Btemp, 3, 1, -$AR1->element(3,1));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R1} \)".$BR.$BR."\(  \text{R3}   +  \)".ans_rule(2)."\(  \text{R1} \)".$BR.$BR."\(  \text{R4} \)",$AR1C1->ans_array(2),$BR1C1->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR1->element(2,1))->cmp);
ANS((-$AR1->element(3,1))->cmp);
ANS($AR1C1->cmp);
ANS($BR1C1->cmp);
}
elsif($AR1->element(2,1) !=0 && $AR1->element(4,1)!=0)
{
Context("Matrix");
$Mtemp = row_add($MR1, 2, 1, -$MR1->element(2,1));
$MR1C1 = row_add($Mtemp, 4, 1, -$MR1->element(4,1));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR1, 2, 1, -$AR1->element(2,1));
$AR1C1 = row_add($Atemp, 4, 1, -$AR1->element(4,1));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR1, 2, 1, -$AR1->element(2,1));
$BR1C1 = row_add($Btemp, 4, 1, -$AR1->element(4,1));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R1} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4}   +  \)".ans_rule(2)."\(  \text{R1} \)",$AR1C1->ans_array(2),$BR1C1->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR1->element(2,1))->cmp);
ANS((-$AR1->element(4,1))->cmp);
ANS($AR1C1->cmp);
ANS($BR1C1->cmp);
}
elsif($AR1->element(3,1) !=0 && $AR1->element(4,1)!=0)
{
Context("Matrix");
$Mtemp = row_add($MR1, 3, 1, -$MR1->element(3,1));
$MR1C1 = row_add($Mtemp, 4, 1, -$MR1->element(4,1));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR1, 3, 1, -$AR1->element(3,1));
$AR1C1 = row_add($Atemp, 4, 1, -$AR1->element(4,1));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR1, 3, 1, -$AR1->element(3,1));
$BR1C1 = row_add($Btemp, 4, 1, -$AR1->element(4,1));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\(  \text{R3} +  \)".ans_rule(2)."\(  \text{R1} \)".$BR.$BR."\(  \text{R4}   +  \)".ans_rule(2)."\(  \text{R1} \)",$AR1C1->ans_array(2),$BR1C1->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR1->element(3,1))->cmp);
ANS((-$AR1->element(4,1))->cmp);
ANS($AR1C1->cmp);
ANS($BR1C1->cmp);
}

} #for previous begin
Section::End();

###########################################
### R2C2 
###########################################
Section::Begin(" ");

Context("Numeric");
$popRow = PopUp(["?", "row 1 column 1", "row 1 column 2", "row 1 column 3", "row 1 column 4", "row 2 column 1", "row 2 column 2","row 2 column 3", "row 2 column 4", "row 3 column 1", "row 3 column 2", "row 3 column 3", "row 3 column 4", "row 4 column 1", "row 4 column 2", "row 4 column 3", "row 4 column 4"],"row 2 column 2");

Context("Numeric");
if( $AR1C1->element(2,2) == 1)
{
    $popOption = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"there is already a leading 1");
}
elsif( $AR1C1->element(3,2) == 1 || $AR1C1->element(4,2) == 1)
{
    $popOption = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"interchange two rows");
}
else
{
    $popOption = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"multiply a row by a non-zero constant");
}

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1C1, align=>'rrrr|r')  \} 
\) 

$BR $BR
For this step, the leading 1 should be in \{ $popRow->menu() \} and to create that leading 1, I will \{ $popOption->menu() \}.

END_TEXT
Context()->normalStrings;

ANS($popRow->cmp() );
ANS($popOption->cmp() );

Section::End();

Section::Begin(" ");

Context("Matrix");
$MR2 = $MR1C1;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2 = $AR1C1;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2 = $BR1C1;

if( $AR1C1->element(2,2) == 1)
{
    #leading 1
Context("Matrix");
$MR2 = $MR1C1;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2 = $AR1C1;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2 = $BR1C1;

}
elsif( $AR1C1->element(3,2) == 1)
{
    #swap
Context("Matrix");
$MR2 = row_switch($MR1C1,2,3);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2 = row_switch($AR1C1,2,3);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2 = row_switch($BR1C1,2,3);

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1C1, align=>'rrrr|r')  \} 
\) 

\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R2} \Leftrightarrow \text{R3} \)",$AR2->ans_array(2),$BR2->ans_array(2)],     align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS($AR2->cmp);
ANS($BR2->cmp);

}
elsif( $AR1C1->element(4,2) == 1)
{
    #swap
Context("Matrix");
$MR2 = row_switch($MR1C1,2,4);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2 = row_switch($AR1C1,2,4);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2 = row_switch($BR1C1,2,4);

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1C1, align=>'rrrr|r')  \} 
\) 

\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R2} \Leftrightarrow \text{R4} \)",$AR2->ans_array(2),$BR2->ans_array(2)],     align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS($AR2->cmp);
ANS($BR2->cmp);

}
elsif( $AR1C1->element(3,2) == -1)
{
    #multiply
Context("Matrix");
$MR2a = row_mult($MR1C1,3,1/$MR1C1->element(3,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2a = row_mult($AR1C1,3,1/$AR1C1->element(3,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2a = row_mult($BR1C1,3,1/$AR1C1->element(3,2));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1C1, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR.ans_rule(2)."\( \text{R3} \)".$BR.$BR."\( \text{R4} \)",$AR2a->ans_array(2),$BR2a->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((1/$AR1C1->element(3,2))->cmp);
ANS($AR2a->cmp);
ANS($BR2a->cmp);

Section::End();

###########################################
Section::Begin(" ");

    #swap
Context("Matrix");
$MR2 = row_switch($MR2a,2,3);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2 = row_switch($AR2a,2,3);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2 = row_switch($BR2a,2,3);

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2a, align=>'rrrr|r')  \} 
\) 

\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R2} \Leftrightarrow \text{R3} \)",$AR2->ans_array(2),$BR2->ans_array(2)],     align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS($AR2->cmp);
ANS($BR2->cmp);

}
elsif( $AR1C1->element(4,2) == -1)
{
    #multiply
Context("Matrix");
$MR2a = row_mult($MR1C1,4,1/$MR1C1->element(4,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2a = row_mult($AR1C1,4,1/$AR1C1->element(4,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2a = row_mult($BR1C1,4,1/$AR1C1->element(4,2));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1C1, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\( \text{R3} \)".$BR.$BR.ans_rule(2)."\( \text{R4} \)",$AR2a->ans_array(2),$BR2a->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((1/$AR1C1->element(4,2))->cmp);
ANS($AR2a->cmp);
ANS($BR2a->cmp);

Section::End();

###########################################
Section::Begin(" ");

    #swap
Context("Matrix");
$MR2 = row_switch($MR2a,2,4);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2 = row_switch($AR2a,2,4);

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2 = row_switch($BR2a,2,4);

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2a, align=>'rrrr|r')  \} 
\) 

\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R2} \Leftrightarrow \text{R4} \)",$AR2->ans_array(2),$BR2->ans_array(2)],     align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS($AR2->cmp);
ANS($BR2->cmp);

}
else
{
    #multiply
Context("Matrix");
$MR2 = row_mult($MR1C1,2,1/$MR1C1->element(2,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2 = row_mult($AR1C1,2,1/$AR1C1->element(2,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2 = row_mult($BR1C1,2,1/$AR1C1->element(2,2));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR1C1, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR.ans_rule(2)."\(  \text{R2} \)".$BR.$BR."\( \text{R3} \)".$BR.$BR."\( \text{R4} \)",$AR2->ans_array(2),$BR2->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((1/$AR1C1->element(2,2))->cmp);
ANS($AR2->cmp);
ANS($BR2->cmp);
}

Section::End();

###########################################
Section::Begin(" ");

Context("Numeric");
$popColumn = PopUp(["?", "column 1", "column 2", "column 3", "column 4"],"column 2");
$popPivot = PopUp(["?", "row 1 column 1", "row 1 column 2", "row 1 column 3", "row 1 column 4", "row 2 column 1", "row 2 column 2","row 2 column 3", "row 2 column 4", "row 3 column 1", "row 3 column 2", "row 3 column 3", "row 3 column 4", "row 4 column 1", "row 4 column 2", "row 4 column 3", "row 4 column 4"],"row 2 column 2");

Context("Numeric");
$popAbove = PopUp(["?", "above", "below", "above and below"],"above and below");

Context()->texStrings;
BEGIN_TEXT 
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2, align=>'rrrr|r')  \} 
\) 
$BR
$BR
For this step, there should be 0's in \{ $popColumn->menu() \}. I will use the leading 1 in \{ $popPivot->menu() \} to create those 0's \{ $popAbove->menu() \} that leading 1.

END_TEXT
Context()->normalStrings;

ANS($popColumn->cmp() );
ANS($popPivot->cmp() );
ANS($popAbove->cmp() );

Section::End();

Section::Begin(" ");

Context("Matrix");
$MR2C2 = $MR2;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2C2 = $AR2;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2C2 = $BR2;

if($AR2->element(1,2) != 0 && $AR2->element(3,2) != 0 && $AR2->element(4,2) == 0)
{
Context("Matrix");
$Mtemp = row_add($MR2, 1, 2, -$MR2->element(1,2));
$MR2C2 = row_add($Mtemp, 3, 2, -$MR2->element(3,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR2, 1, 2, -$AR2->element(1,2));
$AR2C2 = row_add($Atemp, 3, 2, -$AR2->element(3,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR2, 1, 2, -$AR2->element(1,2));
$BR2C2 = row_add($Btemp, 3, 2, -$AR2->element(3,2));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1}   +  \)".ans_rule(2)."\(  \text{R2} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\(  \text{R3}   +  \)".ans_rule(2)."\(  \text{R2} \)".$BR.$BR."\(  \text{R4} \)",$AR2C2->ans_array(2),$BR2C2->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR2->element(1,2))->cmp);
ANS((-$AR2->element(3,2))->cmp);
ANS($AR2C2->cmp);
ANS($BR2C2->cmp);
}
elsif($AR2->element(1,2) == 0 && $AR2->element(3,2) != 0 && $AR2->element(4,2) == 0)
{
Context("Matrix");
$MR2C2 = row_add($MR2, 3, 2, -$MR2->element(3,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2C2 = row_add($AR2, 3, 2, -$AR2->element(3,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2C2 = row_add($BR2, 3, 2, -$AR2->element(3,2));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\(  \text{R3}   +  \)".ans_rule(2)."\(  \text{R2} \)".$BR.$BR."\(  \text{R4} \)",$AR2C2->ans_array(2),$BR2C2->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR2->element(3,2))->cmp);
ANS($AR2C2->cmp);
ANS($BR2C2->cmp);
}
elsif($AR2->element(1,2) != 0 && $AR2->element(3,2) == 0 && $AR2->element(4,2) == 0)
{
Context("Matrix");
$MR2C2 = row_add($MR2, 1, 2, -$MR2->element(1,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR2C2 = row_add($AR2, 1, 2, -$AR2->element(1,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR2C2 = row_add($BR2, 1, 2, -$AR2->element(1,2));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1}   +  \)".ans_rule(2)."\(  \text{R2} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4} \)",$AR2C2->ans_array(2),$BR2C2->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR2->element(1,2))->cmp);
ANS($AR2C2->cmp);
ANS($BR2C2->cmp);
}
elsif($AR2->element(1,2) != 0 && $AR2->element(3,2) != 0 && $AR2->element(4,2) != 0)
{
Context("Matrix");
$Mtemp = row_add($MR2, 1, 2, -$MR2->element(1,2));
$Mtemp1 = row_add($Mtemp, 3, 2, -$MR2->element(3,2));
$MR2C2 = row_add($Mtemp1, 4, 2, -$MR2->element(4,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR2, 1, 2, -$AR2->element(1,2));
$Atemp1 = row_add($Atemp, 3, 2, -$AR2->element(3,2));
$AR2C2 = row_add($Atemp1, 4, 2, -$AR2->element(4,2));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR2, 1, 2, -$AR2->element(1,2));
$Btemp1 = row_add($Btemp, 3, 2, -$AR2->element(3,2));
$BR2C2 = row_add($Btemp1, 4, 2, -$AR2->element(4,2));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1}   +  \)".ans_rule(2)."\(  \text{R2} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\(  \text{R3}   +  \)".ans_rule(2)."\(  \text{R2} \)".$BR.$BR."\(  \text{R4}    +  \)".ans_rule(2)."\(  \text{R2}\)",$AR2C2->ans_array(2),$BR2C2->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR2->element(1,2))->cmp);
ANS((-$AR2->element(3,2))->cmp);
ANS((-$AR2->element(4,2))->cmp);
ANS($AR2C2->cmp);
ANS($BR2C2->cmp);
}

Section::End();

###########################################
### R3C3
###########################################
Section::Begin(" ");

Context("Numeric");
$popRow = PopUp(["?", "row 1 column 1", "row 1 column 2", "row 1 column 3", "row 1 column 4", "row 2 column 1", "row 2 column 2","row 2 column 3", "row 2 column 4", "row 3 column 1", "row 3 column 2", "row 3 column 3", "row 3 column 4", "row 4 column 1", "row 4 column 2", "row 4 column 3", "row 4 column 4"],"row 3 column 3");

Context("Numeric");
if( $AR2C2->element(3,3) == 1)
{
    $popOption = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"there is already a leading 1");
}
else
{
    $popOption = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"multiply a row by a non-zero constant");
}

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2C2, align=>'rrrr|r')  \} 
\) 
$BR
$BR
For this step, the leading 1 should be in \{ $popRow->menu() \} and to create that leading 1, I will \{ $popOption->menu() \}.

END_TEXT
Context()->normalStrings;

ANS($popRow->cmp() );
ANS($popOption->cmp() );

Section::End();

Section::Begin(" ");

Context("Matrix");
$MR3 = $MR2C2;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR3 = $AR2C2;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR3 = $BR2C2;

if( $AR2C2->element(3,3) == 1)
{
    #leading 1
}
else
{
    #multiply
Context("Matrix");
$MR3 = row_mult($MR2C2,3,1/$MR2C2->element(3,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR3 = row_mult($AR2C2,3,1/$AR2C2->element(3,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR3 = row_mult($BR2C2,3,1/$AR2C2->element(3,3));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR2C2, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR.ans_rule(2)."\( \text{R3} \)".$BR.$BR."\(  \text{R4} \)",$AR3->ans_array(2),$BR3->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((1/$AR2C2->element(3,3))->cmp);
ANS($AR3->cmp);
ANS($BR3->cmp);
}

Section::End();

###########################################
Section::Begin(" ");

Context("Numeric");
$popColumn = PopUp(["?", "column 1", "column 2", "column 3", "column 4"],"column 3");
$popPivot = PopUp(["?", "row 1 column 1", "row 1 column 2", "row 1 column 3", "row 1 column 4", "row 2 column 1", "row 2 column 2","row 2 column 3", "row 2 column 4", "row 3 column 1", "row 3 column 2", "row 3 column 3", "row 3 column 4", "row 4 column 1", "row 4 column 2", "row 4 column 3", "row 4 column 4"],"row 3 column 3");

Context("Numeric");
$popAbove = PopUp(["?", "above", "below", "above and below"],"above and below");

Context()->texStrings;
BEGIN_TEXT 
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR3, align=>'rrrr|r')  \} 
\) 
$BR
$BR
For this step, there should be 0's in \{ $popColumn->menu() \}. I will use the leading 1 in \{ $popPivot->menu() \} to create those 0's \{ $popAbove->menu() \} that leading 1.

END_TEXT
Context()->normalStrings;

ANS($popColumn->cmp() );
ANS($popPivot->cmp() );
ANS($popAbove->cmp() );

Section::End();

Section::Begin(" ");

Context("Matrix");
$MR3C3 = $MR3;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR3C3 = $AR3;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR3C3 = $BR3;

if($AR3->element(1,3) != 0 && $AR3->element(2,3) != 0 && $AR3->element(4,3) == 0)
{
Context("Matrix");
$Mtemp = row_add($MR3, 1, 3, -$MR3->element(1,3));
$MR3C3 = row_add($Mtemp, 2, 3, -$MR3->element(2,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR3, 1, 3, -$AR3->element(1,3));
$AR3C3 = row_add($Atemp, 2, 3, -$AR3->element(2,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR3, 1, 3, -$AR3->element(1,3));
$BR3C3 = row_add($Btemp, 2, 3, -$AR3->element(2,3));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR3, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1}   +  \)".ans_rule(2)."\(  \text{R3} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R3} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4} \)",$AR3C3->ans_array(2),$BR3C3->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR3->element(1,3))->cmp);
ANS((-$AR3->element(2,3))->cmp);
ANS($AR3C3->cmp);
ANS($BR3C3->cmp);
}
elsif($AR3->element(1,3) == 0 && $AR3->element(2,3) != 0 && $AR3->element(4,3) == 0)
{
Context("Matrix");
$MR3C3 = row_add($MR3, 2, 3, -$MR3->element(2,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR3C3 = row_add($AR3, 2, 3, -$AR3->element(2,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR3C3 = row_add($BR3, 2, 3, -$AR3->element(2,3));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR3, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  text{R1} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R3} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4} \)",$AR3C3->ans_array(2),$BR3C3->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR3->element(2,3))->cmp);
ANS($AR3C3->cmp);
ANS($BR3C3->cmp);
}
elsif($AR3->element(1,3) != 0 && $AR3->element(2,3) == 0 && $AR3->element(4,3) == 0)
{
Context("Matrix");
$MR3C3 = row_add($MR3, 1, 3, -$MR3->element(1,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR3C3 = row_add($AR3, 1, 3, -$AR3->element(1,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR3C3 = row_add($BR3, 1, 3, -$AR3->element(1,3));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR3, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  text{R1}   +  \)".ans_rule(2)."\(  \text{R3} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4} \)",$AR3C3->ans_array(2),$BR3C3->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR3->element(1,3))->cmp);
ANS($AR3C3->cmp);
ANS($BR3C3->cmp);
}
elsif($AR3->element(1,3) != 0 && $AR3->element(2,3) != 0 && $AR3->element(4,3) != 0)
{
Context("Matrix");
$Mtemp = row_add($MR3, 1, 3, -$MR3->element(1,3));
$Mtemp1 = row_add($Mtemp, 2, 3, -$MR3->element(2,3));
$MR3C3 = row_add($Mtemp1, 4, 3, -$MR3->element(4,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR3, 1, 3, -$AR3->element(1,3));
$Atemp1 = row_add($Atemp, 2, 3, -$AR3->element(2,3));
$AR3C3 = row_add($Atemp1, 4, 3, -$AR3->element(4,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR3, 1, 3, -$AR3->element(1,3));
$Btemp1 = row_add($Btemp, 2, 3, -$AR3->element(2,3));
$BR3C3 = row_add($Btemp1, 4, 3, -$AR3->element(4,3));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR3, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1}   +  \)".ans_rule(2)."\(  \text{R3} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R3} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4}   +  \)".ans_rule(2)."\(  \text{R3}\)",$AR3C3->ans_array(2),$BR3C3->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR3->element(1,3))->cmp);
ANS((-$AR3->element(2,3))->cmp);
ANS((-$AR3->element(4,3))->cmp);
ANS($AR3C3->cmp);
ANS($BR3C3->cmp);
}
elsif($AR3->element(1,3) == 0 && $AR3->element(2,3) != 0 && $AR3->element(4,3) != 0)
{
Context("Matrix");
$Mtemp = row_add($MR3, 4, 3, -$MR3->element(4,3));
$MR3C3 = row_add($Mtemp, 2, 3, -$MR3->element(2,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR3, 4, 3, -$AR3->element(4,3));
$AR3C3 = row_add($Atemp, 2, 3, -$AR3->element(2,3));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR3, 4, 3, -$AR3->element(4,3));
$BR3C3 = row_add($Btemp, 2, 3, -$AR3->element(2,3));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR3, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R3} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4}   +  \)".ans_rule(2)."\(  \text{R3} \)",$AR3C3->ans_array(2),$BR3C3->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR3->element(2,3))->cmp);
ANS((-$AR3->element(4,3))->cmp);
ANS($AR3C3->cmp);
ANS($BR3C3->cmp);
}


Section::End();

###########################################
### R4C4
###########################################
Section::Begin(" ");

Context("Numeric");
$popRow = PopUp(["?", "row 1 column 1", "row 1 column 2", "row 1 column 3", "row 1 column 4", "row 2 column 1", "row 2 column 2","row 2 column 3", "row 2 column 4", "row 3 column 1", "row 3 column 2", "row 3 column 3", "row 3 column 4", "row 4 column 1", "row 4 column 2", "row 4 column 3", "row 4 column 4"],"row 4 column 4");

Context("Numeric");
if( $AR3C3->element(4,4) == 1)
{
    $popOption = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"there is already a leading 1");
}
else
{
    $popOption = PopUp(["Choose", "interchange two rows", "multiply a row by a non-zero constant", "add a multiple of a row to another row","there is already a leading 1", "there is a zero and I cannot create a leading 1"],"multiply a row by a non-zero constant");
}

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR3C3, align=>'rrrr|r')  \} 
\) 
$BR
$BR
For this step, the leading 1 should be in \{ $popRow->menu() \} and to create that leading 1, I will \{ $popOption->menu() \}.

END_TEXT
Context()->normalStrings;

ANS($popRow->cmp() );
ANS($popOption->cmp() );

Section::End();

Section::Begin(" ");

Context("Matrix");
$MR4 = $MR3C3;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR4 = $AR3C3;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR4 = $BR3C3;

if( $AR3C3->element(4,4) == 1)
{
    #leading 1
}
else
{
    #multiply
Context("Matrix");
$MR4 = row_mult($MR3C3,4,1/$MR3C3->element(4,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR4 = row_mult($AR3C3,4,1/$AR3C3->element(4,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR4 = row_mult($BR3C3,4,1/$AR3C3->element(4,4));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR3C3, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\( \text{R3} \)".$BR.$BR.ans_rule(2)."\(  \text{R4} \)",$AR4->ans_array(2),$BR4->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((1/$AR3C3->element(4,4))->cmp);
ANS($AR4->cmp);
ANS($BR4->cmp);
}

Section::End();

###########################################
Section::Begin(" ");

Context("Numeric");
$popColumn = PopUp(["?", "column 1", "column 2", "column 3", "column 4"],"column 4");
$popPivot = PopUp(["?", "row 1 column 1", "row 1 column 2", "row 1 column 3", "row 1 column 4", "row 2 column 1", "row 2 column 2","row 2 column 3", "row 2 column 4", "row 3 column 1", "row 3 column 2", "row 3 column 3", "row 3 column 4", "row 4 column 1", "row 4 column 2", "row 4 column 3", "row 4 column 4"],"row 4 column 4");

Context("Numeric");
$popAbove = PopUp(["?", "above", "below", "above and below"],"above");

Context()->texStrings;
BEGIN_TEXT 
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR4, align=>'rrrr|r')  \} 
\) 
$BR
$BR
For this step, there should be 0's in \{ $popColumn->menu() \}. I will use the leading 1 in \{ $popPivot->menu() \} to create those 0's \{ $popAbove->menu() \} that leading 1.

END_TEXT
Context()->normalStrings;

ANS($popColumn->cmp() );
ANS($popPivot->cmp() );
ANS($popAbove->cmp() );

Section::End();

Section::Begin(" ");

Context("Matrix");
$MR4C4 = $MR4;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR4C4 = $AR4;

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR4C4 = $BR4;

if($AR4->element(1,4) != 0 && $AR4->element(2,4) != 0 && $AR4->element(3,4) == 0)
{
Context("Matrix");
$Mtemp = row_add($MR4, 1, 4, -$MR4->element(1,4));
$MR3C4 = row_add($Mtemp, 2, 4, -$MR4->element(2,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR4, 1, 4, -$AR4->element(1,4));
$AR4C4 = row_add($Atemp, 2, 4, -$AR4->element(2,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR4, 1, 4, -$AR4->element(1,4));
$BR4C4 = row_add($Btemp, 2, 4, -$AR4->element(2,4));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR4, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1}   +  \)".ans_rule(2)."\(  \text{R4} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R4} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4} \)",$AR4C4->ans_array(2),$BR4C4->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR4->element(1,4))->cmp);
ANS((-$AR4->element(2,4))->cmp);
ANS($AR4C4->cmp);
ANS($BR4C4->cmp);
}
elsif($AR4->element(1,4) == 0 && $AR4->element(2,4) != 0 && $AR4->element(3,4) == 0)
{
Context("Matrix");
$MR4C4 = row_add($MR4, 2, 4, -$MR4->element(2,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR4C4 = row_add($AR4, 2, 4, -$AR4->element(2,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR4C4 = row_add($BR4, 2, 4, -$AR4->element(2,4));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR4, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  text{R1} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R4} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4} \)",$AR4C4->ans_array(2),$BR4C4->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR4->element(2,4))->cmp);
ANS($AR4C4->cmp);
ANS($BR4C4->cmp);
}
elsif($AR4->element(1,4) != 0 && $AR4->element(2,4) == 0 && $AR4->element(3,4) == 0)
{
Context("Matrix");
$MR4C4 = row_add($MR4, 1, 4, -$MR4->element(1,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$AR4C4 = row_add($AR4, 1, 4, -$AR4->element(1,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$BR4C4 = row_add($BR4, 1, 4, -$AR4->element(1,4));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR4, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  text{R1}   +  \)".ans_rule(2)."\(  \text{R4} \)".$BR.$BR."\(  \text{R2} \)".$BR.$BR."\(  \text{R3} \)".$BR.$BR."\(  \text{R4} \)",$AR4C4->ans_array(2),$BR4C4->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR4->element(1,4))->cmp);
ANS($AR4C4->cmp);
ANS($BR4C4->cmp);
}
elsif($AR4->element(1,4) != 0 && $AR4->element(2,4) != 0 && $AR4->element(3,4) != 0)
{
Context("Matrix");
$Mtemp = row_add($MR4, 1, 4, -$MR4->element(1,4));
$Mtemp1 = row_add($Mtemp, 2, 4, -$MR4->element(2,4));
$MR4C4 = row_add($Mtemp1, 3, 4, -$MR4->element(3,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {close=>'|',formMatrix => 1};
Context()->lists->set(Matrix=>{close=>'|',formMatrix => 1});
Context()->parens->set("[" => {type => "Matrix", close=>'|'});
$Atemp = row_add($AR4, 1, 4, -$AR4->element(1,4));
$Atemp1 = row_add($Atemp, 2, 4, -$AR4->element(2,4));
$AR4C4 = row_add($Atemp1, 3, 4, -$AR4->element(3,4));

Context("Matrix");
Context()->{cmpDefaults}{Matrix} = {open=>'.',formMatrix => 1};
Context()->lists->set(Matrix=>{open=>'.',formMatrix => 1});
Context()->parens->set("." => {type => "Matrix", open=>".", close => "]"});
$Btemp = row_add($BR4, 1, 4, -$AR4->element(1,4));
$Btemp1 = row_add($Btemp, 2, 4, -$AR4->element(2,4));
$BR4C4 = row_add($Btemp1, 3, 4, -$AR4->element(3,4));

Context()->texStrings;
BEGIN_TEXT
\( 
    \{side_labels(  qw(\text{R1} \text{R2} \text{R3} \text{R4}) )\} 
    \{   display_matrix_mm($MR4, align=>'rrrr|r')  \} 
\) 
\{ 
BeginTable(border=>0, tex_border=>"1pt", spacing=>0, padding=>2, center=>0).
AlignedRow(["\( \sim \)","\(  \text{R1}   +  \)".ans_rule(2)."\(  \text{R4} \)".$BR.$BR."\(  \text{R2}   +  \)".ans_rule(2)."\(  \text{R4} \)".$BR.$BR."\(  \text{R3} +  \)".ans_rule(2)."\(  \text{R4} \)".$BR.$BR."\(  \text{R4} \)",$AR4C4->ans_array(2),$BR4C4->ans_array(2)], align=>LEFT, separation=>0).

EndTable()
\}
END_TEXT
Context()->normalStrings;

ANS((-$AR4->element(1,4))->cmp);
ANS((-$AR4->element(2,4))->cmp);
ANS((-$AR4->element(3,4))->cmp);
ANS($AR4C4->cmp);
ANS($BR4C4->cmp);
}

Section::End();

###########################################
Section::Begin("Draw a conclusion");

Context()->texStrings;
BEGIN_TEXT
We have $BR
\( 
    \{   display_matrix_mm($MR4C4, align=>'rrrr|r')  \} 
\) 

$BR $BR
Thus, the temperatures \(T_1,\) \(T_2,\) \(T_3,\) \(T_4,\) when the grid is in thermal equilibrium are $BR $BR
\( \quad T_1 = \) \{ans_rule(10)\} $BR $BR
\( \quad T_2 = \) \{ans_rule(10)\} $BR $BR
\( \quad T_3 = \) \{ans_rule(10)\} $BR $BR
\( \quad T_4 = \) \{ans_rule(10)\} $BR

END_TEXT
Context()->normalStrings;

ANS(Compute($t1)->cmp);
ANS(Compute($t2)->cmp);
ANS(Compute($t3)->cmp);
ANS(Compute($t4)->cmp);

Section::End();

###########################################
###########################################

Scaffold::End();

ENDDOCUMENT();       # This should be the last executable line in the problem.

