## Ressource produite dans le cadre du projet Mathéma-TIC (Samuel Bernard - Cégep régional de Lanaudière à Terrebonne, et Bruno Poellhuber - Université de Montréal), financé par le programme d’arrimage universités-collèges (PCUC) du ministère de l'Enseignement supérieur, de la Recherche et de la Science du Québec (MESRS).
## DBsubject(Probabilités)
## DBchapter(Variables aléatoires discrètes)
## KEYWORDS('définition', 'loi binomiale')
## Modifié par Jean-Sébastien Turcotte - Université de Montréal
## Traduction française : Sylvie Charbonneau
###############Source###############
## DESCRIPTION
## Random variables
## ENDDESCRIPTION

## ZKEYWORDS('probability', 'random variables')
## ZCMMK tagged this problem.

## ZDBsubject('Probability')
## ZDBchapter('Theory')
## ZDBsection('Random Variables')
## ZDate('6/27/2005')
## ZAuthor('Cristina Murray-Krezan')
## ZInstitution('UVA')
## ZTitleText1('Statistics for Management and Economics')
## ZEditionText1('6')
## ZAuthorText1('Keller, Warrack')
## ZSection1()
## ZProblem1()
###############Source###############
## Level(2)    #Voir le fichier sur les levels
## Language(fr)

DOCUMENT();        # Ceci est la première ligne exécutable

loadMacros(
"PGstandard.pl",
"PGcourse.pl",
"MathObjects.pl",
"AnswerFormatHelp.pl",
"extraAnswerEvaluators.pl",
"contextIntegerFunctions.pl",	   #Mettre cette macro pour la fonction C(n,k)
"PGauxiliaryFunctions.pl",                #Même chose, mais avec d’autres fonctions utiles;
#"PGgraphmacros.pl",       #Pour l’utilisation de graphiques
#"PGchoicemacros.pl",     #Permet l’utilisation de NchooseK, retournant un array de K nombres aléatoires parmi 0.. N-1
#”unionLists.pl”                 #Permet l’utilisation de liste (voir fichier commandes utiles)
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 1;
## install_problem_grader(~~&std_problem_grader);

$p1 = random(0.29,0.49,0.01);
$p2 = $p1 + random(0.05,0.16,0.01);

$n = random(15,18,1);
$r = random(9,11,1);

BEGIN_TEXT
$PAR
Au jeu de blackjack tel qu'il se joue dans les casinos à Las Vegas, Montréal et ailleurs, le croupier a toujours l'avantage.  La plupart de joueurs ne sont pas experts.  
Par conséquent, la probabilité qu'un joueur moyen gagne une main est de $p1.  Trouver la probabilité qu'un joueur moyen gagne :
$PAR
A.  2 fois en 5 mains
$PAR
Probabilité = \{ans_rule(15)\}
$PAR
B. $r fois ou plus en $n mains
$PAR
Probabilité = \{ans_rule(15)\}
$PAR
$PAR
Dans plusieurs livres traitant des techniques de poker, on propose une ${BBOLD} stratégie de base ${EBOLD} qui permettrait d'augmenter à $p2 la probabilité de gain d'une main donnée. En supposant qu'un joueur applique la stratégie de base, trouver la probabilité qu'il gagne : $PAR
C. 2 fois en 5 mains
$PAR
Probabilité = \{ans_rule(15)\}
$PAR
D. $r fois ou plus en $n mains
$PAR
Probabilité = \{ans_rule(15)\}
$PAR
END_TEXT

$ans1 = Compute("C(5,2)*($p1**2)*(1-$p1)**3");
ANS($ans1->cmp);

$accum2 = 0;
$i = $r;
while ($i <= $n) {
    $accum2 += C($n,$i)*($p1**$i)*(1-$p1)**($n-$i);
    $i++;
}

$ans2 = Compute("$accum2");
ANS($ans2->cmp);

$ans3 = Compute("C(5,2)*($p2**2)*(1-$p2)**3");
ANS($ans3->cmp);

$accum4 = 0;
$i = $r;
while ($i <= $n) {
    $accum4 += C($n,$i)*($p2**$i)*(1-$p2)**($n-$i);
    $i++;
}

$ans4 = Compute("$accum4");
ANS($ans4->cmp);

ENDDOCUMENT();       # This should be the last executable line in the problem.
